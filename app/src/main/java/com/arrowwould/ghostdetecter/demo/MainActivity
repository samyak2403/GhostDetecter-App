import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import androidx.appcompat.app.AppCompatActivity;
import androidx.cardview.widget.CardView;
import com.arrowwould.ghostdetecter.databinding.ActivityMainBinding;
import com.github.anastr.speedviewlib.SpeedView;
import java.util.Random;

public class MainActivity extends AppCompatActivity {

    private ActivityMainBinding binding;
    private float magneticFieldStrength;
    private final Random random = new Random();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Initialize View Binding
        binding = ActivityMainBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        // Configure SpeedView
        binding.speedView.setMaxSpeed(200);
        binding.speedView.setMinSpeed(0);
        binding.speedView.speedTo(0);

        // Display a default message for the fake sensor
        binding.readingText.setText("Using simulated magnetic field readings.");

        // Start the fake reading updates
        simulateSensorReadings();
    }

    private void simulateSensorReadings() {
        // Simulate sensor data updates
        binding.getRoot().postDelayed(new Runnable() {
            @Override
            public void run() {
                // Generate a random magnetic field strength value
                magneticFieldStrength = random.nextFloat() * 200; // Range: 0 to 200 ÂµT

                // Update the UI with the fake readings
                updateUI();

                // Schedule the next update
                simulateSensorReadings();
            }
        }, 1000); // Update every second
    }

    private void updateUI() {
        // Update SpeedView
        binding.speedView.speedTo(magneticFieldStrength);

        // Update TextView
        String ghostStatus;
        if (magneticFieldStrength > 100) {
            ghostStatus = "Ghost Detected! ðŸ‘»";
        } else {
            ghostStatus = "No Ghosts Nearby...";
        }
        binding.readingText.setText(String.format("Magnetic Field: %.2f ÂµT\n%s", magneticFieldStrength, ghostStatus));

        // Update bulb colors based on intensity
        resetBulbs();
        if (magneticFieldStrength > 150) {
            setBulbColor(binding.bulb6, Color.RED);
            setBulbColor(binding.bulb5, Color.RED);
        }
        if (magneticFieldStrength > 120) {
            setBulbColor(binding.bulb4, Color.YELLOW);
        }
        if (magneticFieldStrength > 90) {
            setBulbColor(binding.bulb3, Color.GREEN);
        }
        if (magneticFieldStrength > 60) {
            setBulbColor(binding.bulb2, Color.GREEN);
        }
        if (magneticFieldStrength > 30) {
            setBulbColor(binding.bulb1, Color.GREEN);
        }
    }

    private void resetBulbs() {
        setBulbColor(binding.bulb1, Color.GRAY);
        setBulbColor(binding.bulb2, Color.GRAY);
        setBulbColor(binding.bulb3, Color.GRAY);
        setBulbColor(binding.bulb4, Color.GRAY);
        setBulbColor(binding.bulb5, Color.GRAY);
        setBulbColor(binding.bulb6, Color.GRAY);
    }

    private void setBulbColor(CardView bulb, int color) {
        bulb.setCardBackgroundColor(color);
    }
}
